package part3.ex5.추상화;

import java.util.Scanner;

public abstract class ExamConsole {
	//Composition Has A 일체형 관계 (생성과 동시에 만들어진다.)
	public ExamList list; 
	public ExamConsole () {
		list = makeList();
	} //원래는 이렇게 작성되어야 하는 것을 private ExamList list = new ExamConsole로 쉽게 쓸수 있게 바뀐 것.
 	protected abstract ExamList makeList();
	public int inputMenu() {
 		Scanner scan =  new Scanner(System.in);  
 		System.out.println("⎧⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎫");	
		System.out.println("⎪    \"메인 메뉴\"    ⎪");  
		System.out.println("⎪                 ⎪");
		System.out.println("⎩⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎭");
		System.out.println(" 1. 성적 입력");
		System.out.println(" 2. 성적 출력");
		System.out.println(" 3. 종료");
		System.out.print(" 선택 > ");
		return scan.nextInt();
 	}
	public void quit() {
		System.out.println("프로그램을 종료합니다.");
	}
	public void menuError() {
		System.out.println( "잘못된 입력입니다. 1~3만 입력 가능.");
	}
	
	public void print() {
		print(list.size());
	}
	
	public void print(int size) {
		System.out.println("⎧⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎫");	
		System.out.println("⎪    성적 출력      ⎪");  
		System.out.println("⎪                 ⎪");
		System.out.println("⎩⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎭");
		for (int i =0; i < size; i ++) {
			Exam exam = list.get(i); 
			int kor = exam.getKor();
			int eng = exam.getEng(); // 중복되는 것을 간단하게 만들기 위해 해당 영역에서만 임시 변수 사용.
			int math = exam.getMath();
			
			System.out.printf("   학생 %d 성적 출력\n",i+1);
			System.out.printf("Korean : %d\nEnglish : %d\nMath : %d\n", kor,eng,math);
			onPrint(exam);
	 		
			System.out.println("⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽");
		}
	}
	

	
	protected abstract void onPrint(Exam exam);
	protected abstract void onInput(int size, Exam exam);
	
	public void input() {
		int size = list.getCurrent();
		int kor,eng,math;
		Scanner scan = new Scanner(System.in);
		System.out.println("⎧⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎫");	
		System.out.println("⎪    성적 입력      ⎪");  
		System.out.println("⎪                 ⎪");
		System.out.println("⎩⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎭");
		
		do {
			System.out.printf("학생%d 국어 성적 입력 :",size+1);
			kor = scan.nextInt();
			if (kor>100 || kor<0) {
				System.out.println("입력 범위 초과");
		}
		} while (kor>100 || kor<0);
		
		do {
			System.out.printf("학생%d 영어 성적 입력 :",size+1);
			eng = scan.nextInt();
			if (eng>100 || eng<0) {
				System.out.println("입력 범위 초과");
		}
		} while (eng>100 || eng<0);
		
		do {
			System.out.printf("학생%d 수학 성적 입력 :",size+1);
			math = scan.nextInt();
			if (math>100 || math<0) {
				System.out.println("입력 범위 초과");
		}
		} while (math>100 || math<0);
//		Exam exam = new Exam(kor,eng,math);
		Exam exam = makeExam();
		exam.setKor(kor);
		exam.setEng(eng);
		exam.setMath(math);
		onInput(size, exam); // 따로 exam을 리턴할 필요가 없다.
		list.add(exam);
		System.out.println("⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽");

	}

	protected abstract Exam makeExam(); //factory method
	
	
}
