package part3.ex5.추상화.copy;

public class ExamList {

	private Exam[] exams;
    private int current;
    public ExamList() { // 기본 생성자. 없으면 변수 입력 없이 호출객체 생성 불가능.
		this(3); //여기서 this는 생성자를 통해 방금 만들어진 객체. new ExamList
	}
	
    
    //Aggregation Has A (생성 시점 이후에 참조된 캡슐의 객체는 나중에 만들어진다.)
	public ExamList(int size) { // 생성자 overload
		current = 0;
		exams = new Exam[size]; //exam을 참조하는 변수만 만들어진 것.실제로 exam 객체가 생성된 것이 아니다.
	}
	
	public Exam[] getExams() {
		return exams;
	}

	public void setExams(Exam[] exams) {
		this.exams = exams;
	}

	public int getCurrent() {
		return current;
	}

	public void setCurrent(int current) {
		this.current = current;
	}

	
	
	
	public Exam get(int i) {
		return exams[i];
	}

	public void add(int kor, int eng,int math) {
		
		Exam exam = new Exam(kor,eng,math);
		
		if(exams.length == current) { // 공간 늘리기 작업 3단위.
			Exam[] tempExams = new Exam[current+3];
			for (int i=0; i<current;i++) {
				tempExams[i] = exams[i];
			}
			exams = tempExams; //참조하지 않는 값 기존의 exams는 garbage화.
		}	
		exams[current] = exam;
		current++;
	}

	public int size() {
		return current;
	}
}

